name: Deploy to Cloud Run

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE_NAME: ckd-safety-app
  REGION: asia-northeast3

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Create .env.local
      run: |
        echo "VITE_FIREBASE_API_KEY=AIzaSyCZ2osPamQDtle4Smk2wCYFTvqmyGVniCs" > .env.local
        echo "VITE_FIREBASE_AUTH_DOMAIN=ckd-safety-system-new.firebaseapp.com" >> .env.local
        echo "VITE_FIREBASE_PROJECT_ID=ckd-safety-system-new" >> .env.local
        echo "VITE_FIREBASE_STORAGE_BUCKET=ckd-safety-system-new.appspot.com" >> .env.local
        echo "VITE_FIREBASE_MESSAGING_SENDER_ID=410764463066" >> .env.local
        # App ID 설정 (시크릿이 없으면 기본값 사용)
        if [ -n "${{ secrets.VITE_FIREBASE_APP_ID }}" ]; then
          echo "VITE_FIREBASE_APP_ID=${{ secrets.VITE_FIREBASE_APP_ID }}" >> .env.local
        else
          echo "VITE_FIREBASE_APP_ID=1:410764463066:web:placeholder" >> .env.local
          echo "⚠️ Warning: VITE_FIREBASE_APP_ID secret not set, using placeholder"
        fi
        echo "VITE_FIREBASE_MEASUREMENT_ID=" >> .env.local
        echo "VITE_FIREBASE_USE_FETCH_STREAMS=false" >> .env.local
        echo "VITE_FIREBASE_FORCE_LONG_POLLING=false" >> .env.local
        echo "VITE_FIREBASE_LONG_POLLING_TIMEOUT_SEC=30" >> .env.local
        echo "Debug: .env.local content:"
        cat .env.local

    - name: Build project
      run: npm run build

    - name: Clean build context
      run: |
        echo "Cleaning potential problematic files..."
        find . -name "*.tmp" -delete || true
        find . -name ".DS_Store" -delete || true

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Configure Docker
      run: gcloud auth configure-docker

    - name: Build Docker image
      run: |
        docker build --no-cache -t gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA .
        docker tag gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA gcr.io/$PROJECT_ID/$SERVICE_NAME:latest

    - name: Push Docker image
      run: |
        docker push gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA
        docker push gcr.io/$PROJECT_ID/$SERVICE_NAME:latest

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy $SERVICE_NAME \
          --image gcr.io/$PROJECT_ID/$SERVICE_NAME:latest \
          --region $REGION \
          --platform managed \
          --allow-unauthenticated \
          --port 8080 \
          --memory 1Gi \
          --cpu 1 \
          --max-instances 10